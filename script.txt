(function(){
  var TARGET_LABELS = ["Status","Project ID","Submitted By","Submitted On"];

  function norm(t){ return String(t||"").replace(/\s+/g," ").replace(/\s*\*+$/,"").trim(); }
  function q(sel,root){ return (root||document).querySelector(sel); }
  function qa(sel,root){ return Array.prototype.slice.call((root||document).querySelectorAll(sel)); }
  function findLabelNode(txt){
    var want = norm(txt).toLowerCase();
    var nodes = qa("label,.ms-Label,.infowise-label,th,[data-field-label]");
    for (var i=0;i<nodes.length;i++){
      var t = norm(nodes[i].innerText||"").toLowerCase();
      if (t === want) return nodes[i];
    }
    return null;
  }
  function hideDescFor(label){
    var labelNode = findLabelNode(label);
    if (!labelNode) return;
    var row = labelNode.closest(".iw-control, .ms-Grid-row, .row, .ms-Stack, .ms-Grid, div") || labelNode.parentElement;
    qa(".fieldDesc", row).forEach(function(n){ n.style.display = "none"; });
  }
  TARGET_LABELS.forEach(hideDescFor);

  // guard against re-renders
  var formRoot = document.body;
  if (window.MutationObserver){
    new MutationObserver(function(){ TARGET_LABELS.forEach(hideDescFor); })
      .observe(formRoot, {subtree:true, childList:true});
  }
})();
