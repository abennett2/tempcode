(function() {
    'use strict';

    // --- CONFIGURATION ---
    const CONFIG = {
        sourceListName: "Project Names",
        statusColumnInternalName: "Status",
        statusToKeep: "Active",
        projectLookupSelector: "#ComboBox21-input"
    };
    // --- END CONFIGURATION ---

    const projectDropdown = document.querySelector(CONFIG.projectLookupSelector);

    if (!projectDropdown) {
        console.error("Ultimate Forms Script: Could not find the Project Lookup dropdown.");
        return;
    }

    /**
     * Fetches the list of active project titles and removes any options
     * from the dropdown that are not on that list.
     */
    async function removeInactiveProjects() {
        try {
            // 1. Fetch the list of projects that SHOULD be in the dropdown.
            const apiUrl = `/_api/web/lists/getbytitle('${CONFIG.sourceListName}')/items?$select=Title&$filter=${CONFIG.statusColumnInternalName} eq '${CONFIG.statusToKeep}'`;
            const response = await fetch(apiUrl, {
                headers: { "Accept": "application/json;odata=verbose" }
            });

            if (!response.ok) {
                throw new Error(`SharePoint API Error: ${response.statusText}`);
            }

            const data = await response.json();
            const activeItems = data.d.results;

            // 2. Create a simple list of the titles for easy checking.
            const validTitles = new Set(activeItems.map(item => item.Title));

            // 3. Loop through all the options currently in the dropdown and remove the ones not on our list.
            // We loop backwards because we are removing items from a live collection.
            for (let i = projectDropdown.options.length - 1; i >= 0; i--) {
                const option = projectDropdown.options[i];
                
                // Skip the placeholder option (e.g., "Select a value...")
                if (!option.value || option.value === "0") {
                    continue;
                }

                // If the option's text is NOT in our list of valid titles, remove it.
                if (!validTitles.has(option.text)) {
                    projectDropdown.remove(i);
                }
            }

        } catch (error) {
            console.error("Ultimate Forms Script: Error while filtering lookup:", error);
        }
    }

    // A simple timeout to ensure Infowise has loaded all the original options first.
    setTimeout(removeInactiveProjects, 1000); // Wait 1 second before filtering.

})();
