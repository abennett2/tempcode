(function(){
  // ðŸ‘‡ EDIT these to the exact labels on your canvas if they differ
  var LOOKUP_CAPTION  = "Project";            // label next to your lookup
  var SECTION_TITLE   = "Rest of Form";       // container header text
  var IDCOPY_CAPTION  = "Project ID (copy)";  // label of your read-only field

  // simple page badge so you KNOW the script ran
  function badge(text, color){
    var b=document.createElement("div");
    b.textContent=text;
    b.style.cssText="position:fixed;top:8px;right:8px;z-index:999999;padding:8px 10px;border-radius:6px;font:12px/1.2 system-ui;"+
                    "background:"+ (color||"#333")+";color:#fff;box-shadow:0 2px 8px rgba(0,0,0,.2)";
    document.body.appendChild(b); setTimeout(function(){b.remove();}, 3000);
  }

  // wait for API
  function wait(cb){var t=0;(function p(){ if(window.infowiseForm){cb();} else if(t++<200){setTimeout(p,50);} })();}

  wait(function(){
    badge("Script active âœ…","#2d7");
    function yesno(x){return x?"YES":"NO";}

    var project = null, section = null, sectionEl = null, idField = null;

    try { project = infowiseForm.getField(LOOKUP_CAPTION); } catch(e){}
    try { section = infowiseForm.getSection(SECTION_TITLE); } catch(e){}
    if (!section){
      sectionEl = document.querySelector(".rest-of-form") || document.querySelector(".Rest.of.Form");
      if (sectionEl){
        section = {
          setVisible: function (v){ sectionEl.style.display = v ? "" : "none"; },
          setReadOnly: function (ro){
            sectionEl.querySelectorAll("input,select,textarea,button").forEach(function(n){ n.disabled = !!ro; });
          }
        };
      }
    }
    try { idField = infowiseForm.getField(IDCOPY_CAPTION); } catch(e){}

    // show what we found
    badge(
      'Lookup "'+LOOKUP_CAPTION+'": '+yesno(project)+' | '+
      'Section "'+SECTION_TITLE+'": '+yesno(section)+' | '+
      'Field "'+IDCOPY_CAPTION+'": '+yesno(idField),
      project && section && idField ? "#2d7" : "#e67"
    );
    if (!project || !section || !idField){ return; }

    // helper setters
    function setVisible(v){ section.setVisible(!!v); }
    function setId(v){ try{ idField.setValue(v!=null?String(v):""); }catch(e){} }

    // tolerant reader for the lookup selection
    function readProjectId(){
      try{
        if (typeof project.getLookupId === "function"){ var id = project.getLookupId(); if (id) return id; }
        if (typeof project.getValue === "function"){
          var v = project.getValue();                     // number | string | {id,value} | array | null
          if (typeof v === "number") return v;
          if (typeof v === "string" && /^\d+$/.test(v)) return parseInt(v,10);
          if (Array.isArray(v) && v.length){
            var a=v[0];
            if (typeof a==="number") return a;
            if (typeof a==="string" && /^\d+$/.test(a)) return parseInt(a,10);
            if (a && typeof a==="object" && ("id" in a)) return a.id;
          }
          if (v && typeof v==="object" && ("id" in v)) return v.id;
        }
      }catch(e){}
      return null;
    }

    // initial + live
    function update(){
      var id = readProjectId();
      setId(id || "");
      setVisible(!!id);
    }
    update();

    if (typeof project.onChange === "function"){ project.onChange(update); }
    else {
      // fallback polling (keeps running so you don't miss late changes)
      var last=null; setInterval(function(){
        var cur = readProjectId();
        if (cur !== last){ last = cur; update(); }
      }, 500);
    }
  });
})();
