(function() {
    'use strict';

    // --- CONFIGURATION ---
    const CONFIG = {
        sourceListName: "Project Names",
        statusColumnInternalName: "Status",
        statusToKeep: "Active",
        projectLookupSelector: "#ComboBox21-input"
    };

    const projectDropdown = document.querySelector(CONFIG.projectLookupSelector);

    if (!projectDropdown) {
        console.error("Ultimate Forms Script: Could not find the Project Lookup dropdown. Please check the 'projectLookupSelector'.");
        return;
    }

    /**
     * Fetches active projects from the source list and populates the dropdown.
     */
    async function populateFilteredLookup() {
        // Keep the original placeholder option (e.g., "(Select a value...)")
        const originalFirstOption = projectDropdown.options[0];
        projectDropdown.innerHTML = ''; // Clear existing options
        if (originalFirstOption) {
            projectDropdown.appendChild(originalFirstOption);
        }
        
        try {
            // Construct the SharePoint REST API URL to get filtered items
            const apiUrl = `/_api/web/lists/getbytitle('${CONFIG.sourceListName}')/items?$select=Id,Title&$filter=${CONFIG.statusColumnInternalName} eq '${CONFIG.statusToKeep}'&$orderby=Title`;
            
            const response = await fetch(apiUrl, {
                headers: { "Accept": "application/json;odata=verbose" }
            });

            if (!response.ok) {
                throw new Error(`SharePoint API Error: ${response.statusText}`);
            }

            const data = await response.json();
            const items = data.d.results;

            // Add the filtered items as new options to the dropdown
            items.forEach(item => {
                const option = document.createElement('option');
                option.value = item.Id;
                option.text = item.Title;
                projectDropdown.appendChild(option);
            });

        } catch (error) {
            console.error("Failed to populate filtered lookup:", error);
        }
    }

    // --- SCRIPT EXECUTION ---
    // Run the script to populate the dropdown when the form loads.
    if (window.SP && window.SP.SOD) {
        SP.SOD.executeFunc('sp.js', 'SP.ClientContext', populateFilteredLookup);
    } else {
        // Fallback for older pages or if sp.js is already loaded
        document.addEventListener('DOMContentLoaded', populateFilteredLookup);
    }
    
})();
